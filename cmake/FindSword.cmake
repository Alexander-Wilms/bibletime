SET (REQUIRED_SWORD_VERSION 1.7.0)

# This module looks for installed sword
#
# It will define the following values
# SWORD_INCLUDE_DIR
# SWORD_LIBRARY
# SWORD_LIBRARY_DIR

FIND_LIBRARY(SWORD_LIBRARY NAMES sword)
IF (SWORD_LIBRARY)
    MESSAGE(STATUS "Found Sword library: ${SWORD_LIBRARY}")
ELSE (SWORD_LIBRARY)
    MESSAGE(FATAL_ERROR "Could not find the Sword library.")
ENDIF (SWORD_LIBRARY)
GET_FILENAME_COMPONENT(SWORD_LIBRARY_DIR "${SWORD_LIBRARY}" ABSOLUTE)

FIND_PATH(SWORD_INCLUDE_DIR NAMES "sword/swmgr.h")
IF (SWORD_INCLUDE_DIR)
    SET(SWORD_INCLUDE_DIR "${SWORD_INCLUDE_DIR}/sword")
    MESSAGE(STATUS "Found Sword include dir: ${SWORD_INCLUDE_DIR}")
ELSE (SWORD_INCLUDE_DIR)
    MESSAGE(FATAL_ERROR "Sword include dir could not be found.")
ENDIF (SWORD_INCLUDE_DIR)

#
# Check for minimum Sword version
#
MACRO(CHECK_SWORD_VERSION VERSION)
    IF(MSVC)
        SET(CHECK_SWORD_VERSION_DEFINES "/DSWUSINGDLL")
    ENDIF(MSVC)
    TRY_RUN(SWVERSIONTEST_RUN_RESULT SWVERSIONTEST_COMPILE_RESULT
        ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/cmake/sword_version_compare.cpp
        CMAKE_FLAGS
            "-DINCLUDE_DIRECTORIES:STRING=${SWORD_INCLUDE_DIR}"
            "-DLINK_DIRECTORIES:STRING=${SWORD_LIBRARY_DIR}"
            "-DLINK_LIBRARIES:STRING=${SWORD_LIBRARY}"
            ${SWORD_LIBRARY}
        COMPILE_DEFINITIONS
            ${CHECK_SWORD_VERSION_DEFINES}
        COMPILE_OUTPUT_VARIABLE SWVERSIONTEST_COMPILE_OUTPUT
        RUN_OUTPUT_VARIABLE SWVERSIONTEST_RUN_OUTPUT
        ARGS ${VERSION}
    )
    IF(NOT SWVERSIONTEST_COMPILE_RESULT)
        MESSAGE(FATAL_ERROR "Sword version check program could NOT be compiled: ${SWVERSIONTEST_COMPILE_OUTPUT}")
    ENDIF(NOT SWVERSIONTEST_COMPILE_RESULT)
ENDMACRO(CHECK_SWORD_VERSION VERSION)

MESSAGE(STATUS "Checking for required Sword version ${REQUIRED_SWORD_VERSION}...")
CHECK_SWORD_VERSION(${REQUIRED_SWORD_VERSION})

IF(SWVERSIONTEST_RUN_RESULT EQUAL 0)
    MESSAGE(STATUS "Installed Sword version is ok. Check program said: ${SWVERSIONTEST_RUN_OUTPUT}")
ELSE(SWVERSIONTEST_RUN_RESULT EQUAL 0)
    MESSAGE(FATAL_ERROR "Installed Sword version is NOT ok! Check program said: ${SWVERSIONTEST_RUN_OUTPUT}")
ENDIF(SWVERSIONTEST_RUN_RESULT EQUAL 0)
